const std = @import("std");

pub const Token = struct {
    tag: Tag,
    loc: Loc,

    pub const Loc = struct {
        start: usize,
        end: usize,
    };
    
    pub const keywords = std.StaticStringMap(Tag).initComptime(.{
        .{ "db", .keyword_db },
        .{ "dw", .keyword_d2 },
        .{ "dd", .keyword_dd },
        .{ "dq", .keyword_dq },
        .{ "do", .keyword_do },
        .{ "dt", .keyword_dt },
        .{ "dy", .keyword_dy },
        .{ "dz", .keyword_dz },
        .{ "resb", .keyword_resb },
        .{ "resw", .keyword_res2 },
        .{ "resd", .keyword_resd },
        .{ "resq", .keyword_resq },
        .{ "reso", .keyword_reso },
        .{ "rest", .keyword_rest },
        .{ "resy", .keyword_resy },
        .{ "resz", .keyword_resz },
        .{ "times", .keyword_times },
        .{ "embed", .keyword_embed },
    });

    pub const Tag = enum {
        invalid,
        identifier_or_instruction,
        string_literal,
        eof,
        line_continuation,
        semicolon,
        number_literal,
        l_square_bracket,
        r_square_bracket,
        l_parenthesis,
        r_parenthesis,
        colon,
        plus,
        minus,
        double_l_angle_bracket,
        double_r_angle_bracket,
        pipe,
        caret,
        ampersand,
        asterisk,
        slash,
        slash_slash,
        percent,
        percent_percent,
        tilde,
        bang,
        dollar,
        dollar_dollar,
        keyword_db,
        keyword_dw,
        keyword_dd,
        keyword_dq,
        keyword_do,
        keyword_dt,
        keyword_dy,
        keyword_dz,
        keyword_resb,
        keyword_resw,
        keyword_resd,
        keyword_resq,
        keyword_reso,
        keyword_rest,
        keyword_resy,
        keyword_resz,
        keyword_times,
        keyword_embed,
    };
};
